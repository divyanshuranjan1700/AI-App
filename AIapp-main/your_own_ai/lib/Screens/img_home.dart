import 'dart:io';
import 'dart:typed_data';

import 'package:flutter/material.dart';
import 'package:path_provider/path_provider.dart';
import 'package:permission_handler/permission_handler.dart';
import 'package:screenshot/screenshot.dart';
import 'package:share_plus/share_plus.dart';

import '../openAi/ImageGeneration/image_apicall.dart';

class img_home extends StatefulWidget {
  const img_home({super.key});

  @override
  State<img_home> createState() => _img_homeState();
}

class _img_homeState extends State<img_home> {
  var textfieldController = TextEditingController();
  var screenshotcontroller = ScreenshotController();
  downloadImg() async {
    var result = await Permission.storage.request();
    if (result.isGranted) {
      final folder = "AiImages";
      final path = Directory("storage/emulated/0/$folder");
      final filename = "${DateTime.now().microsecondsSinceEpoch}.png";
      debugPrint("I am in downloading image");
      debugPrint("${path.path}");
      if (await path.exists()) {
        await screenshotcontroller.captureAndSave(path.path,
            delay: Duration(milliseconds: 100),
            fileName: filename,
            pixelRatio: 1.0);
      } else {
        await path.create();
        await screenshotcontroller.captureAndSave(path.path,
            delay: Duration(milliseconds: 100),
            fileName: filename,
            pixelRatio: 1.0);
      }
    }
  }

  shareImg() async {
    await screenshotcontroller
        .capture(delay: Duration(milliseconds: 100), pixelRatio: 1.0)
        .then((Uint8List? img) async {
      if (img != null) {
        final directory = (await getApplicationDocumentsDirectory()).path;
        final filename = "createdImg.png";
        final imgpath = await File("$directory/$filename").create();
        await imgpath.writeAsBytes(img);
        Share.shareFiles([imgpath.path], text: "Generated By Your Own AI");
      } else {
        debugPrint("failed to capture image");
      }
      // await ImageCall.shareImage(value);
    });
  }

  String image = '';
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      theme: ThemeData(
    brightness: Brightness.dark,
    primaryColor: Colors.grey,
    fontFamily: 'Georgia',
    textTheme: const TextTheme(
      displayLarge: TextStyle(fontSize: 72.0, fontWeight: FontWeight.bold),
      bodyMedium: TextStyle(fontSize: 14.0, fontFamily: 'Hind'),
    ),
  ),
      home: Scaffold(
          appBar: AppBar(
            centerTitle: true,
            title: Text("Image Generation"),
          ),
          body: Column(
            children: [
              Expanded(
                  child: Container(
                      color: Colors.grey,
                      child: Column(
                        children: [
                          // Row(
                          //   children: [
                          //     // TextField(
                          //     //   controller: textfieldController,
                          //     //   decoration: InputDecoration(
                          //     //     hintText: "Enter Text",
                          //     //     // border: OutlineInputBorder(
                          //     //     //   borderRadius: BorderRadius.circular(10),
                          //     //     // ),
                          //     //   ))
                          TextField(
                              controller: textfieldController,
                              decoration: InputDecoration(
                                hintText: "Write Image name",
                                border: OutlineInputBorder(
                                  borderRadius: BorderRadius.circular(10),
                                ),
                              ))
                        ],
                      ))),
              ElevatedButton(
                  onPressed: () async {
                    image = await ImageCall.getImage(textfieldController.text);
                    setState(() {
                      image = image;
                    });
                  },
                  child: Text("Generate Image")),
              ElevatedButton(
                onPressed: () async {
                  await shareImg();
                },
                child: Text("Share Image"),
              ),
              ElevatedButton(
                onPressed: ()  {
                  downloadImg();
                },
                child: Text("Download Image"),
              ),
              Expanded(
                  flex: 3,
                  child: Container(
                    color: Colors.black,
                    child: Screenshot(
                      controller: screenshotcontroller,
                      child: image == ''
                          ? Image(image: AssetImage("assets/image/a.gif"))
                          : Image(image: NetworkImage(image)),
                    ),
                  ))
            ],
          )),
    );
  }
}